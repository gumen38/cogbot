// Generated by CoffeeScript 1.3.3
(function() {
  var Eventor;

  Eventor = (function() {
    var clientReceiver, clientSender, redis;

    redis = require("redis");

    clientReceiver = redis.createClient();

    clientSender = redis.createClient();

    function Eventor() {
      var _this = this;
      this.markers = [];
      clientReceiver.on("message", function(channel, message) {
        return _this.route(channel, message);
      });
    }

    Eventor.prototype.on = function(event, callback) {
      if (!(event in this.markers)) {
        this.markers[event] = [];
        this.markers[event].push(callback);
        return clientReceiver.subscribe(event);
      } else {
        return this.markers[event].push(callback);
      }
    };

    Eventor.prototype.trigger = function(event, data) {
      data = JSON.stringify(data);
      return clientSender.publish(event, data);
    };

    Eventor.prototype.route = function(event, message) {
      var Callback, _i, _len, _ref, _results;
      message = JSON.parse(message);
      _ref = this.markers[event];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        Callback = _ref[_i];
        _results.push(Callback(message));
      }
      return _results;
    };

    return Eventor;

  })();

  exports.Eventor = Eventor;

}).call(this);
